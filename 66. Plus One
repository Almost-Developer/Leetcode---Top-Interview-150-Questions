Plus One

You are given a large integer represented as an integer array digits, where each digits[i] is the i-th digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.
Increment the large integer by one and return the resulting array of digits.

Example 1:
Input: digits = [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.
Incrementing by one gives 123 + 1 = 124.
Thus, the result should be [1,2,4].

Example 2:
Input: digits = [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.
Incrementing by one gives 4321 + 1 = 4322.
Thus, the result should be [4,3,2,2].

Example 3:
Input: digits = [9]
Output: [1,0]
Explanation: The array represents the integer 9.
Incrementing by one gives 9 + 1 = 10.
Thus, the result should be [1,0].
 
Constraints:
1 <= digits.length <= 100
0 <= digits[i] <= 9
digits does not contain any leading 0's.

Approach:
1. Iterate over the number from the last.
2. Check the digits one by one, if the digits are less than 9 then simply increment it.
3. Otherwise make it zero and take another space on the first to put the carry value.

Solution.
class HelloWorld {
    public static void main(String[] args) {
        int[] digit = {9};
        int[] res = plusOne(digit);
        for(int i=0; i<res.length; i++){
            System.out.println(res[i]);
        }
    }
    public static int[] plusOne(int[] digit) {
        for(int i=digit.length-1; i>=0; i--) {
            if(digit[i] < 9) {
                digit[i]++;
                return digit;
            }
            digit[i] = 0;
        }
        digit = new int[digit.length+1];
        digit[0] = 1;
        return digit;
    }
}
