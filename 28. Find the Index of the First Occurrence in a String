Find the Index of the First Occurrence in a String

Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Example 1:
Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.

Example 2:
Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.
 
Constraints:
1 <= haystack.length, needle.length <= 104
haystack and needle consist of only lowercase English characters.

Approach:
1. cut a substring with the same length of needle
2. iterate over the haystack string and compare the said substring value with the neddle value
3. if matches return index
4. otherwise increment index value

Solution.
class HelloWorld {
    public static int findTheIndexOfFirstOccurenceInAString(String haystack, String needle) {
        int haylen = haystack.length();
        int nedlen = needle.length();
        for(int i=0; i<(haylen - nedlen)+1; i++) {
            if(haystack.substring(i, i+nedlen).equals(needle)) return i;
        }
        return -1;
    }
    
    public static void main(String[] args) {
        String haystack = "sadbutsad";
        String needle = "sad";
        
        int res = findTheIndexOfFirstOccurenceInAString(haystack, needle);
        System.out.print(res);
    }
}
